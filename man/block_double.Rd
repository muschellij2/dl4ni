% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/block_half_double.R
\name{block_double}
\alias{block_double}
\title{Block Double}
\usage{
block_double(object, initial_filters = NULL, kernel_size = c(3, 3, 3),
  num_steps = NULL, batch_normalization = FALSE, dropout = 0,
  use_upsampling = TRUE, activation = "relu")
}
\arguments{
\item{object}{(\code{keras} object) Object to which append this block}

\item{initial_filters}{(numeric) Number of filters in the first convolutional layer, Default: 2 ^ \code{num_steps}}

\item{kernel_size}{(list or vector) size of the convolution kernels, Default: c(3, 3, 3)}

\item{num_steps}{(integer) Number of steps to perform downsampling, Default: 1 if \code{kernel_size} is a vector or its length if it's a list.}

\item{activation}{(character) Activation function in the block layers, Default: 'relu'}

\item{params}{(list) List of parameters to apply, if not listed in the previous ones.}
}
\value{
The composed object.
}
\description{
This function creates a block of convolutional layers with upsampling such that the dimension
of the outputs is doubled after each layer.
}
\details{
In each step, the number of filters is halved wrt the previous step. Thus, if \code{num_steps == 3}, the number of filters in the layers in this block is: 8, 4, 2.
}
\seealso{
block_downsample block_unet

Other blocks: \code{\link{block_half}}
}
