% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/block_half_double.R
\name{block_half}
\alias{block_half}
\title{Block Half}
\usage{
block_half(object, initial_filters = 2, kernel_size = c(3, 3, 3),
  num_steps = 1, batch_normalization = FALSE, dropout = 0,
  use_maxpooling = TRUE, activation = "relu")
}
\arguments{
\item{object}{(\code{keras} object) Object to which append this block}

\item{initial_filters}{(numeric) Number of filters in the first convolutional layer, Default: 2}

\item{kernel_size}{(list or vector) size of the convolution kernels, Default: c(3, 3, 3)}

\item{num_steps}{(integer) Number of steps to perform downsampling, Default: 1 if \code{kernel_size} is a vector or its length if it's a list.}

\item{activation}{(character) Activation function in the block layers, Default: 'relu'}
}
\value{
The composed object.
}
\description{
This function creates a block of convolutional layers with max pooling such that the dimension
of the outputs is halved after each block.
}
\details{
In each step, the number of filters is doubled wrt the previous step. Thus, if \code{initial_filters == 2}, the number of filters in the layers in this block is: 2, 4, 8, 16...
}
\seealso{
block_upsample block_unet

Other blocks: \code{\link{block_double}}
}
